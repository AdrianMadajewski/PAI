@model Pai9.Models.Song

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    /*
    This is a security feature to help protect your application against cross-site request forgery.
    Let's assume you have a register functionality in your web app. You have an AccountController (example.com/account/register) 
    where you expect people to submit their info. Normally before someone posts the registration information needs to visit the actual 
    (example.com/account/register) than submit the form.
    Let say I am a bad guy and I want to flood your server with junk info all I need to do is just keep posting 
    directly to (example.com/account/register) without visiting your site. So in order to stop me you implement 
    AntiForgeryToken so you can make it sure I visited the page before I submitted the registration information.
    */

    <div class="form-horizontal">
        <h4>Song</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Artist, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Artist, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenreId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GenreId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GenreId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
